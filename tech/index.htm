<!DOCTYPE html>
<html lang="en">
<head>
  <title>Solutions</title>
   <meta name="viewport" content="width=device-width, initial-scale=1">
   <script data-ad-client="ca-pub-4982733995777736" async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
   <meta charset="utf-8">
   <meta name="Keywords" content="technologies,bc,vancouer,valentine,enjoyit,canada">
   <meta name="Description" content="Enjoy Tech">
   <style>
      ul { list-style: none;}
      ul li.problem:before  { content: '❓';}
      ul li.solution:before { content: '✅';}
      div.code {
        width: 100%;
        background-color: lightblue;
        margin-top: 20px;
        display: none;
      }
    </style>
</head>
<body>
  <h2 title="eTransfer less than $10 to donations@enjoyit.ca to help maintain this website">&#128151; Donations</h2>
  <h1>Enjoy Technologies!</h1>
  <h2>Solutions that work</h2>  
  <p>2021-05-24: Schedule a job on Java EE 6 server to call REST API with JSON 
    <ul>
      <li class="problem"> Problem: Use HTTPS trusting all certificates and receive a JSON array </li>
      <li class="solution"> Solution: <button id="btn-20210524" onclick="showCodeDiv('20210524')">Show code</button>
        <ol>
          <li>Use <a href="https://docs.oracle.com/javaee/6/tutorial/doc/bnboy.html">EJB Timer service (automatic timer)</a> on GlassFish 3.1.2.2</li>
          <li>Use <a href="https://eclipse-ee4j.github.io/jersey.github.io/documentation/1.19.1/client-api.html">Jersey Client API</a> on GlassFish 3.1.2.2</li>
          <li>Use <a href="https://eclipse-ee4j.github.io/jersey.github.io/documentation/1.19.1/json.html#json.jaxb.approach.section">Jersey JAXB Based JSON support</a></li>
          <li>Use <a href="https://www.javadoc.io/doc/com.fasterxml.jackson.jaxrs/jackson-jaxrs-json-provider/2.8.9/com/fasterxml/jackson/jaxrs/json/JacksonJaxbJsonProvider.html">both Jackson and JAXB annotations for flexible configuration</a></li>
          <li>Use customized HTTPSProperties (with X509TrustManager and SSLContext) of ClientConfig to trust all certificates</li>
        </ol>
        <div id="codeDiv-20210524" class="code">
        [Java code in Jersey client]
          <hr>
          <textarea style="border:0; width:100%; resize:none; height:100px;">
@Schedule(hour = "*/2")
public void updateVisitorUsername() {
    try {
      logger.log(Level.INFO,"Running scheduled task: Get new visitors and update their usernames in DB2.");

      // get list of new visitors
      Client restClient = getTrustingAllCertsJerseyClient();
      WebResource resource = restClient.resource(WORKDAY_CACHE_TABLE_URL_NEW_VISITORS);
        try {
          ClientResponse clientResponse = resource
              .type(MediaType.APPLICATION_JSON)
              .accept(MediaType.APPLICATION_JSON)
              .header(WORKDAY_CACHE_TABLE_HEADER_API_KEY, WORKDAY_CACHE_TABLE_API_KEY)
                  .get(ClientResponse.class);

        if (clientResponse != null) {
          if (clientResponse.getClientResponseStatus() == ClientResponse.Status.OK) {
                List<WorkdayWorker> response = Arrays.asList(clientResponse.getEntity(WorkdayWorker[].class));

                logger.log(Level.INFO, "Number of new visitors: [" + response.size() + "]");

              for (WorkdayWorker worker : response) {

                // TODO: update username in DB2
                logger.log(Level.INFO, String.format("Updated visitor %s %s (id=%d)", worker.getFirst_name(), worker.getLast_name(), worker.getId()));
              }

              logger.log(Level.INFO, "Usernames of new visitors have been udpated successfully");
          } else {
            logger.log(Level.SEVERE, "Reponse status is: " + clientResponse.getStatus() + " - " + clientResponse.getClientResponseStatus());
          }
        } else {
          logger.log(Level.SEVERE, "UpdateVisitorUsername: No data fetched from Workday Cache Table");
          }
        } catch (UniformInterfaceException e) { //This exception is thrown if the status code >= 300
          logger.log(Level.SEVERE, "UniformInterfaceException was thrown by calling " + WORKDAY_CACHE_TABLE_URL_NEW_VISITORS, e);
        }
    } catch (Throwable t) {
        logger.log(Level.SEVERE, "An exception was thrown in a scheduled method:", t);
    }
}

private Client getTrustingAllCertsJerseyClient() {

  TrustManager[] trustManagers = new X509TrustManager[] { new X509TrustManager() {

      @Override
      public X509Certificate[] getAcceptedIssuers() {
          return null;
      }

      @Override
      public void checkClientTrusted(X509Certificate[] certs, String authType) {

      }

      @Override
      public void checkServerTrusted(X509Certificate[] certs, String authType) {

      }
  }};
  HostnameVerifier hostnameVerifier = HttpsURLConnection.getDefaultHostnameVerifier();
  try {
    SSLContext ctx = SSLContext.getInstance(SSLCONTEXT_ALGORITHM_SSL);
    ctx.init(null, trustManagers, null);

    ClientConfig config = new DefaultClientConfig(JacksonJaxbJsonProvider.class);
    // ClientConfig config = new DefaultClientConfig(); -- not working
    Map<String, Object> properties = config.getProperties();
    properties.put(HTTPSProperties.PROPERTY_HTTPS_PROPERTIES, new HTTPSProperties(hostnameVerifier, ctx));
    return Client.create(config);
  } catch (KeyManagementException | NoSuchAlgorithmException e) {
    logger.log(Level.SEVERE, "An exception was thrown when setting up SSLContext:", e);
        throw new RuntimeException(e);
    }
}
            </textarea>        
          [Java code in simple JAXB bean implementation]
            <hr>
            <textarea style="border:0; width:100%; resize:none; height:100px;">
@XmlRootElement
public class Email {

  private String email;
    private String email_id;
    private boolean primary;
    @XmlElement(name="public")
    private boolean publicEmail;
    private int workday_worker_id;

  public String getEmail() {
    return email;
  }
  public void setEmail(String email) {
    this.email = email;
  }
  public String getEmail_id() {
    return email_id;
  }
  public void setEmail_id(String email_id) {
    this.email_id = email_id;
  }
  public boolean isPrimary() {
    return primary;
  }
  public void setPrimary(boolean primary) {
    this.primary = primary;
  }
  public boolean isPublicEmail() {
    return publicEmail;
  }
  public void setPublicEmail(boolean publicEmail) {
    this.publicEmail = publicEmail;
  }
  public int getWorkday_worker_id() {
    return workday_worker_id;
  }
  public void setWorkday_worker_id(int workday_worker_id) {
    this.workday_worker_id = workday_worker_id;
  }
}
            </textarea>
          
          [Maven pom.xml]
            <hr>
            <textarea style="border:0; width:100%; resize:none; height:100px;">
<dependency>
  <groupId>com.sun.jersey</groupId>
  <artifactId>jersey-client</artifactId>
  <version>1.12</version>
  <scope>provided</scope>
</dependency>
<dependency>
  <groupId>com.fasterxml.jackson.jaxrs</groupId>
  <artifactId>jackson-jaxrs-json-provider</artifactId>
  <version>2.8.9</version>
</dependency>
          </textarea>
        </div>
    </ul>
  </p>
  <p>100% disk usage on laptop
    <ul> 
      <li class="problem"> Problem: Disk usage is 100% on Dell laptop (Inspiron 15R-5537 with hard drive of Seagate 1TB SATA 5400 RPM, 8MB Cache 2.5", 3.0Gb/s)</li>
      <li class="solution"> Solution: Run services.msc to disable Superfetch service</li>
    </ul>
  </p>
<hr/>
<address>Please feel free to contact <a href="mailto:info@enjoyit.ca">info@enjoyit.ca</a> if you need any further information. We believe that you will enjoy our IT services!</address>
<script>
    function showCodeDiv(divId) {
      var codeDiv = document.getElementById("codeDiv-"+divId);
      var btn = document.getElementById("btn-"+divId);
      if (codeDiv.style.display === "none") {
        codeDiv.style.display = "block";
        btn.innerText = "Hide code";
      } else {
        codeDiv.style.display = "none";
        btn.innerText = "Show code";
      }
    }
    showCodeDiv("20210524");
</script>
</body>
</html>
