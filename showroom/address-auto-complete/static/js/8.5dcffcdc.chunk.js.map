{"version":3,"sources":["components/addressList.js","components/addressContent.js","components/statusMessage.js","utility/ErrorBoundary.js","components/addressQuery.js","routes/projects/LivingWell.js"],"names":["react_bootstrap_ListGroup__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_bootstrap_ListGroup__WEBPACK_IMPORTED_MODULE_0___default","n","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","QueryResult","props","queryResults","length","a","createElement","map","record","source","Item","key","id","action","variant","onClick","handleClick","address","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_bootstrap_Table__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap_Table__WEBPACK_IMPORTED_MODULE_1___default","AddressContent","addressObj","addressContent","Object","keys","constructor","className","striped","bordered","hover","size","prop","undefined","trim","rel","target","href","process","d","__webpack_exports__","StatusMsg","react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_0__","react_bootstrap_Alert__WEBPACK_IMPORTED_MODULE_0___default","react_bootstrap_Spinner__WEBPACK_IMPORTED_MODULE_1__","react_bootstrap_Spinner__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","message","status","startsWith","animation","ErrorBoundary","_this","c_dev_projects_react_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","c_dev_projects_react_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","c_dev_projects_react_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","error","errorInfo","setState","react__WEBPACK_IMPORTED_MODULE_5___default","style","margin","whiteSpace","toString","componentStack","children","Component","AddressQuery","handleSubmit","e","preventDefault","react_default","Form_default","autoComplete","onSubmit","Group","Label","Control","type","onChange","handleChange","value","query","readOnly","loading","placeholder","LivingWell","classCallCheck","possibleConstructorReturn","getPrototypeOf","queryString","searchAddress","addressList","encodeURI","axios","get","then","res","console","log","data","responseData","numhits","msg","Math","abs","hit","catch","err","payload","Container_default","statusMessage","addressQuery","LivingWell_LivingWell"],"mappings":"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","file":"static/js/8.5dcffcdc.chunk.js","sourcesContent":["import ListGroup from 'react-bootstrap/ListGroup';\r\nimport React from 'react';\r\n\r\nfunction QueryResult(props) {\r\n   return  ( props.queryResults.length > 0 &&\r\n   <ListGroup>\r\n      {props.queryResults.map((record) =>\r\n         (record.source === 'TELUS') ?\r\n            <ListGroup.Item key={record.id} action variant=\"primary\" onClick={() => props.handleClick(record)}>{record.address}</ListGroup.Item>\r\n            :\r\n            <ListGroup.Item key={record.id} action variant=\"secondary\" onClick={() => props.handleClick(record)}>{record.address}</ListGroup.Item>\r\n      )}\r\n   </ListGroup>\r\n   );\r\n}\r\n\r\nexport default QueryResult;","import React, { Fragment } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nfunction AddressContent(props) {\r\n   const addressObj = props.addressContent;\r\n \r\n   if (Object.keys(addressObj).length === 0 && addressObj.constructor === Object) {\r\n      // check whether address object is empty: {}\r\n      return null;\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         <p className=\"text-primary\">Address content:</p>\r\n         <Table striped bordered hover size=\"sm\">\r\n            <tbody>\r\n               {Object.keys(addressObj).map((prop) =>\r\n                  <Fragment key={prop}>\r\n                     {addressObj[prop] !== undefined && addressObj[prop] !== null && addressObj[prop].trim().length > 0 ?\r\n                        prop === 'id' ?\r\n                           (<tr>\r\n                              <td>{'LPDS ID'}</td>\r\n                              <td><a rel='noopener noreferrer' target='_blank' href={process.env.REACT_APP_FETCH_BY_LPDS_ID_URL_PREFIX + addressObj[prop]}>{addressObj[prop]}</a></td>\r\n                           </tr>)\r\n                           : (<tr>\r\n                              <td>{prop}</td>\r\n                              <td>{addressObj[prop]}</td>\r\n                           </tr>)\r\n                        : null}\r\n                  </Fragment>\r\n               )}\r\n            </tbody>\r\n         </Table>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default AddressContent;","import Alert from 'react-bootstrap/Alert';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport React from 'react';\r\n\r\nexport default function StatusMsg(props) {\r\n\r\n   const message = props.message;\r\n   if (message.length > 0) {\r\n      let status = 'info';\r\n      if (message.startsWith('ERROR')) {\r\n         status = 'warning';\r\n      }\r\n      return (\r\n         <Alert variant={status}>\r\n            {message.startsWith('Loading...') && <Spinner animation=\"border\" variant=\"success\" size=\"sm\" />}\r\n            {' ' + props.message}\r\n         </Alert>\r\n      );\r\n   } else {\r\n      return null;\r\n   }\r\n};\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n   constructor(props) {\r\n     super(props);\r\n     this.state = { error: null, errorInfo: null };\r\n   }\r\n   \r\n   componentDidCatch(error, errorInfo) {\r\n     // Catch errors in any components below and re-render with error message\r\n     this.setState({\r\n       error: error,\r\n       errorInfo: errorInfo\r\n     })\r\n     // You can also log error messages to an error reporting service here\r\n   }\r\n   \r\n   render() {\r\n     if (this.state.errorInfo) {\r\n       // Error path\r\n       return (\r\n         <div style={{ margin: '2rem 0 0 0' }}>\r\n           <h2>Something went wrong.</h2>\r\n           <details style={{ whiteSpace: 'pre-wrap' }}>\r\n             {this.state.error && this.state.error.toString()}\r\n             <br />\r\n             {this.state.errorInfo.componentStack}\r\n           </details>\r\n         </div>\r\n       );\r\n     }\r\n     // Normally, just render children\r\n     return this.props.children;\r\n   }  \r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\n\r\nclass AddressQuery extends Component {\r\n\r\n   handleSubmit = (e) => {\r\n      e.preventDefault();\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Form autoComplete=\"off\" onSubmit={this.handleSubmit}>\r\n            <Form.Group>\r\n               <Form.Label className=\"text-primary\">Type in address:</Form.Label>\r\n               <Form.Control type=\"text\"\r\n                  onChange={this.props.handleChange}\r\n                  value={this.props.query}\r\n                  readOnly={this.props.loading}\r\n                  placeholder=\"Enter a string to search\" />\r\n            </Form.Group>\r\n         </Form>\r\n      );\r\n   }\r\n\r\n}\r\n\r\nexport default AddressQuery;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Container from 'react-bootstrap/Container';\r\nimport QuerySection from '../../components/addressQuery';\r\nimport ResultSection from '../../components/addressList';\r\nimport ContentSection from '../../components/addressContent';\r\nimport StatusSection from '../../components/statusMessage';\r\nimport ErrorBoundary from '../../utility/ErrorBoundary';\r\n\r\nclass LivingWell extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         query: '',\r\n         addressList: [],\r\n         message: '',\r\n         addressContent: {},\r\n         loading: false\r\n      }\r\n   }\r\n\r\n   handleChange = (e) => {\r\n      this.setState({ query: e.target.value });\r\n      const queryString = e.target.value.trim();\r\n      if (queryString.length > 0) {\r\n         this.searchAddress(queryString);\r\n      } else {\r\n         this.setState({ query: '', addressList: [], message: '', addressContent: {}, loading: false });\r\n      }\r\n   }\r\n\r\n   searchAddress = queryString => {\r\n      this.setState({ addressList: [], message: 'Loading...', addressContent: {}, loading: true });\r\n      const query = process.env.REACT_APP_SEARCH_REST_API_URL_PREFIX + encodeURI(queryString);\r\n      axios.get(query)\r\n         .then(res => {\r\n            console.log(res);\r\n            if (res.status === 200 && res.data.responseData.numhits !== 0) {\r\n               const found = Math.abs(res.data.responseData.numhits);\r\n               const shown = res.data.responseData.hit.length;\r\n               const msg = 'No. of results found: ' + found + ', shown: ' + shown + '. Results from TELUS are in primary color.';\r\n               this.setState({ addressList: res.data.responseData.hit, message: msg, addressContent: {} });\r\n            } else {\r\n               this.setState({ addressList: [], message: 'Status-' + res.status + ': No results found.', addressContent: {} });\r\n            }\r\n            this.setState({ loading: false });\r\n            console.log(this.state.message);\r\n         })\r\n         .catch(err => {\r\n            console.log(err);\r\n            this.setState({ loading: false, addressList: [], message: 'ERROR occurred while searching.', addressContent: {} });\r\n            console.log(this.state.message);\r\n         });\r\n   }\r\n\r\n\r\n\r\n   handleClick = (addressObj) => {\r\n      this.setState({ query: addressObj.address });\r\n      this.setState({ loading: true, message: 'Loading...' });\r\n      const query = process.env.REACT_APP_FETCH_REST_API_URL_PREFIX + encodeURI(addressObj.id);\r\n      axios.get(query)\r\n         .then(res => {\r\n            console.log(res);\r\n            if (res.status === 200 && res.data.responseData.numhits !== 0) {\r\n               const addressContent = res.data.responseData.hit[0].payload;\r\n               if (addressContent !== undefined && addressContent !== null) {\r\n                  this.setState({ addressContent: addressContent, message: 'Address content found and shown below.', addressList: [] });\r\n               } else {\r\n                  this.setState({ addressContent: {}, addressList: [], message: 'ERROR - Address has no payload.' });\r\n               }\r\n            } else {\r\n               this.setState({ addressContent: {}, addressList: [], message: 'Status-' + res.status + ': No results found.' });\r\n            }\r\n            this.setState({ loading: false });\r\n            console.log(this.state.message);\r\n         })\r\n         .catch(err => {\r\n            console.log(err);\r\n            this.setState({ addressContent: {}, addressList: [], message: 'ERROR occurred while fectching address content.' });\r\n            this.setState({ loading: false });\r\n            console.log(this.state.message);\r\n         });\r\n   }\r\n\r\n\r\n   render() {\r\n      return (\r\n         <Container style={{ margin: '2rem 0 0 0' }}>\r\n            <StatusSection message={this.state.message} loading={this.state.loading}/>\r\n            <QuerySection handleChange={this.handleChange} query={this.state.query} loading={this.state.loading} />\r\n            <ResultSection queryResults={this.state.addressList} handleClick={this.handleClick} />\r\n            <ContentSection addressContent={this.state.addressContent} />\r\n         </Container>\r\n      );\r\n   }\r\n}\r\n\r\nexport default () => {\r\n   return <ErrorBoundary><LivingWell /></ErrorBoundary>;\r\n};\r\n"],"sourceRoot":""}